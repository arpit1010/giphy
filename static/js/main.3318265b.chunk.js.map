{"version":3,"sources":["components/list-item/list-item.tsx","components/landing-list/landing-list.tsx","components/search-bar/search-bar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ListItem","gif","useModal","isModalOpen","openModal","closeModal","gifImageInfo","images","fixed_height_small_still","animatedGif","original","className","src","url","alt","slug","height","onClick","id","isOpen","transition","ModalTransition","BOTTOM_UP","LandingList","props","gifList","gifs","map","i","SearchBar","state","searchTerm","this","setState","onChange","type","placeholder","value","ev","handleSearchBarChange","target","React","Component","API_KEY","App","handlePageClick","data","console","log","offset","selected","fetchGifs","lastSearchTerm","pageCount","forcePage","limit","fetch","then","res","json","error","pagination","total_count","_","debounce","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","activeClassName","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQA8BeA,EAtBE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,IAAwB,EACOC,cAAvCC,EADgC,EAChCA,YAAaC,EADmB,EACnBA,UAAWC,EADQ,EACRA,WAC1BC,EAAeL,EAAIM,OAAOC,yBAC1BC,EAAcR,EAAIM,OAAOG,SAC/B,OACI,qCACQ,qBAAKC,UAAU,iBAAiBC,IAAKN,EAAaO,IAAKC,IAAKR,EAAaS,KAAMC,OAAQV,EAAaU,OAAQC,QAASb,IACzH,cAAC,IAAD,CACIc,GAAI,WAAajB,EAAIiB,GACrBC,OAAQhB,EACRiB,WAAYC,IAAgBC,UAHhC,SAKI,sBAAKX,UAAU,gBAAf,UACI,qBAAKC,IAAKH,EAAYI,IAAKC,IAAKL,EAAYM,KAAMC,OAAQP,EAAYO,SACtE,wBAAQL,UAAU,8BAA8BM,QAASZ,EAAzD,4BCFLkB,EAdiD,SAACC,GAC/D,IAAMC,EAAUD,EAAME,KAAKC,KAAI,SAAC1B,EAAkB2B,GAAnB,OAC7B,qBAAKjB,UAAU,GAAf,SACI,cAAC,EAAD,CAAUV,IAAKA,GAAUA,EAAIiB,KADVU,MAKzB,OACM,qBAAKjB,UAAU,0BAAf,SACGc,KCqBII,E,kDA5Bb,WAAYL,GAAa,IAAD,8BACtB,cAAMA,IAEDM,MAAQ,CACXC,WAAY,IAJQ,E,yDAQxB,SAAsBA,GACpBC,KAAKC,SAAS,CAAEF,eAChBC,KAAKR,MAAMU,SAASH,K,oBAGtB,WAAU,IAAD,OACP,OACM,qBAAKpB,UAAU,cAAf,SACE,uBACEwB,KAAK,OACLC,YAAY,yBACZC,MAAOL,KAAKF,MAAMC,WAClBpB,UAAU,kCACVuB,SAAU,SAACI,GAAD,OAAQ,EAAKC,sBAAsBD,EAAGE,OAAOH,gB,GAtB7CI,IAAMC,W,iBCYxBC,EAAU,mCA4EDC,E,kDAzEb,WAAYpB,GAAa,IAAD,8BACtB,cAAMA,IAkCDqB,gBAAkB,SAACC,GACxBC,QAAQC,IAAIF,GACZ,IAAMG,EAAyB,GAAhBH,EAAKI,SACpB,EAAKC,UAAU,EAAKrB,MAAMsB,eAAgB,GAAIH,IAnC9C,EAAKnB,MAAQ,CACXJ,KAAM,CACJoB,KAAM,IAERO,UAAW,EACXD,eAAgB,GAChBE,UAAW,GATS,E,qDAcxB,WACEtB,KAAKmB,UAAU,GAAI,GAAI,K,uBAGzB,SAAiBpB,EAAoBwB,EAAeN,GAAiB,IAAD,OAC5DpC,EAAqB,KAAfkB,EAAA,wDAAqEY,EAArE,kBAAsFY,EAAtF,mBAAsGN,GAAtG,gDAA0JlB,EAA1J,oBAAgLY,EAAhL,kBAAiMY,EAAjM,mBAAiNN,GAC7N,OAAOO,MAAM3C,GACV4C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACAA,EAAKC,MACPb,QAAQC,IAAI,SAEZ,EAAKf,SAAS,CACZP,KAAMiC,EACNN,UAAWM,EAAKE,WAAWC,YAC3BV,eAAgBrB,EAChBuB,UAA0B,KAAfvB,GAAgC,IAAXkB,EAAe,EAAIA,EAAS,U,oBAUtE,WAAU,IAAD,OAEDE,EAAYY,IAAEC,UAAS,SAACjC,GAAiB,EAAKoB,UAAUpB,EAAY,GAAI,KAAM,KACpF,OAAKC,KAAKF,MAAMJ,KAAKoB,KAKjB,aADA,CACC,IAAD,UACE,sBAAKnC,UAAU,+CAAf,UACE,cAAC,EAAD,CAAWuB,SAAU,SAACH,GAAD,OAAqBoB,EAAUpB,MACpD,qBAAKpB,UAAU,aAAf,SACE,cAAC,EAAD,CAAae,KAAMM,KAAKF,MAAMJ,KAAKoB,SAErC,cAAC,IAAD,CACEmB,cAAe,WACfC,UAAW,OACXC,WAAY,MACZC,eAAgB,WAChBf,UAAWrB,KAAKF,MAAMuB,UACtBC,UAAWtB,KAAKF,MAAMwB,UACtBe,qBAAsB,EACtBC,mBAAoB,EACpBC,aAAcvC,KAAKa,gBACnB2B,mBAAoB,aACpBC,gBAAiB,gBArBlB,S,GA7CK/B,aCPHgC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3318265b.chunk.js","sourcesContent":["import React from 'react'\nimport 'react-simple-hook-modal/dist/styles.css';\nimport {\n    Modal,\n    useModal,\n    ModalTransition,\n} from 'react-simple-hook-modal';\n\nconst ListItem = ({ gif }: { gif: any }) => {\n    const { isModalOpen, openModal, closeModal } = useModal();\n    const gifImageInfo = gif.images.fixed_height_small_still;\n    const animatedGif = gif.images.original;\n    return (\n        <>\n                <img className=\"cursor-pointer\" src={gifImageInfo.url} alt={gifImageInfo.slug} height={gifImageInfo.height} onClick={openModal}></img>\n            <Modal\n                id={'gifmodal' + gif.id}\n                isOpen={isModalOpen}\n                transition={ModalTransition.BOTTOM_UP}\n            >\n                <div className=\"flex flex-col\">\n                    <img src={animatedGif.url} alt={animatedGif.slug} height={animatedGif.height} ></img>\n                    <button className=\"bg-red-500 hover:bg-red-700\" onClick={closeModal}>Close</button>\n                </div>\n\n            </Modal>\n        </>\n    )\n}\n\nexport default ListItem","  \nimport * as React from 'react'\nimport ListItem from '../list-item/list-item'\ninterface LandingListProps {\n    gifs : any[]\n}\nconst LandingList : React.FunctionComponent<LandingListProps> = (props) => {\n  const gifList = props.gifs.map((gif: { id: any }, i: string | number | null | undefined) =>\n    <div className=\"\" key={i}>\n        <ListItem gif={gif} key={gif.id} />\n    </div>\n  )\n\n  return (\n        <div className=\"grid grid-cols-7 gap-4 \">\n          {gifList}\n        </div>\n  )\n}\n\nexport default LandingList","import React from 'react'\ninterface SearchState {\n    searchTerm :string\n}\ninterface SearchProps {\n    onChange :any\n}\nclass SearchBar extends React.Component<SearchProps, SearchState> {\n  constructor(props: any) {\n    super(props)\n\n    this.state = {\n      searchTerm: ''\n    }\n  }\n\n  handleSearchBarChange(searchTerm: string) {\n    this.setState({ searchTerm })\n    this.props.onChange(searchTerm)\n  }\n\n  render() {\n    return (\n          <div className=\"mb-10 mt-10\">\n            <input\n              type=\"text\"\n              placeholder=\"Search all the GIFs...\"\n              value={this.state.searchTerm}\n              className=\"border-b h-10 w-80 pl-5 rounded\"\n              onChange={(ev) => this.handleSearchBarChange(ev.target.value)}\n            />\n          </div>\n    )\n  }\n}\n\nexport default SearchBar","import React, { Component } from 'react';\nimport ReactPaginate from 'react-paginate';\nimport './App.css';\nimport LandingList from './components/landing-list/landing-list';\nimport SearchBar from './components/search-bar/search-bar';\nimport _ from 'lodash';\nimport {\n  ModalProvider\n} from 'react-simple-hook-modal';\n\ninterface AppState {\n  gifs: any,\n  pageCount: number,\n  lastSearchTerm: string,\n  forcePage: number\n}\ninterface AppProps {\n\n}\nconst API_KEY = \"tVaJe9QRTL6VZp9xhBkogbNWFTI9hYnJ\"\n\nclass App extends Component<AppProps, AppState> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      gifs: {\n        data: []\n      },\n      pageCount: 0,\n      lastSearchTerm: \"\",\n      forcePage: 0\n    }\n    //this.handlePageClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchGifs(\"\", 35, 0)\n  }\n\n  public fetchGifs(searchTerm: string, limit: number, offset: number) {\n    const url = searchTerm === \"\" ? `http://api.giphy.com/v1/gifs/trending?api_key=${API_KEY}&limit=${limit}&offset=${offset}` : `http://api.giphy.com/v1/gifs/search?q=${searchTerm}&api_key=${API_KEY}&limit=${limit}&offset=${offset}`;\n    return fetch(url)\n      .then(res => res.json())\n      .then(json => {\n        if (json.error) {\n          console.log(\"Error\");\n        } else {\n          this.setState({\n            gifs: json,\n            pageCount: json.pagination.total_count,\n            lastSearchTerm: searchTerm,\n            forcePage: searchTerm !== \"\" && offset === 0 ? 0 : offset / 35\n          });\n        }\n      })\n  }\n  public handlePageClick = (data: any) => {\n    console.log(data);\n    const offset = data.selected * 35;\n    this.fetchGifs(this.state.lastSearchTerm, 35, offset)\n  }\n  render() {\n    //debouncing using lodash method to avoid useless call to api with every keystroke\n    const fetchGifs = _.debounce((searchTerm) => { this.fetchGifs(searchTerm, 35, 0) }, 400);\n    if (!this.state.gifs.data) {\n      return null;\n    } else {\n      return (\n        // 3rd party library component for modal\n        <ModalProvider>\n          <div className=\"container mx-auto flex flex-col items-center\">\n            <SearchBar onChange={(searchTerm: any) => fetchGifs(searchTerm)} />\n            <div className=\"box-border\">\n              <LandingList gifs={this.state.gifs.data} />\n            </div>\n            <ReactPaginate\n              previousLabel={'previous'}\n              nextLabel={'next'}\n              breakLabel={'...'}\n              breakClassName={'break-me'}\n              pageCount={this.state.pageCount}\n              forcePage={this.state.forcePage}\n              marginPagesDisplayed={2}\n              pageRangeDisplayed={5}\n              onPageChange={this.handlePageClick}\n              containerClassName={'pagination'}\n              activeClassName={'active'}\n            />\n          </div>\n        </ModalProvider>\n      );\n    }\n  }\n}\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}